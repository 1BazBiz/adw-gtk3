// Custom added styles

$linked_border: if($variant == 'light', darken($borders_color, 2.7%), lighten($borders_color, 2.7%));

%colored_hbuttons {
  @include button(normal, $headerbar_color, $fg_color);
  &:backdrop {
    @include button(backdrop, $bg_color, $backdrop_fg_color);
  }
  &:hover {
    @include button(hover, $headerbar_color, $fg_color);
    &:backdrop {
      @if $variant == 'light' { @include button(backdrop, darken($bg_color, 2.7%), $backdrop_fg_color); }
      @else { @include button(backdrop, lighten($bg_color, 2.7%), $backdrop_fg_color); }
    }
  }
  &:active, &:checked {
    @include button(active, $headerbar_color, $fg_color);
    &:backdrop {
      @include button(normal, $bg_color, $fg_color); //FIXME
    }
  }
  &:disabled {
    @include button(insensitive, $headerbar_color, $insensitive_fg_color);
  }
  &:backdrop:disabled {
    @include button(backdrop-insensitive, $bg_color, $backdrop_insensitive_color);
  }
}

// headerbar stuff
headerbar:not(.selection-mode), .titlebar:not(.selection-mode) {
  button:not(.titlebutton) {
    &, &:backdrop { @include button(undecorated); }

    &:hover {
      @if $variant == 'light' { @include button(hover, lighten($headerbar_color, 6.3%), $fg_color); }
      @else { @include button(hover, darken($headerbar_color, 6.3%), $fg_color); }
    }

    &:backdrop:hover {
      @if $variant == 'light' { @include button(backdrop, lighten($bg_color, 1.3%), $backdrop_fg_color); }
      @else { @include button(backdrop, darken($bg_color, 1.3%), $backdrop_fg_color); }
    }

    &:active, &:checked, &:active:hover, &:checked:hover {
      @if $variant == 'light' { @include button(active, lighten($headerbar_color, 18%), $fg_color); }
      @else { @include button(active, darken($headerbar_color, 18%), $fg_color); }
    }

    &.default:not(:backdrop) {
      @include button(normal, $headerbar_color, $fg_color);
    }

    &.suggested-action, &.text-button.suggested-action {
      @include button(normal, $suggested_bg_color, $selected_fg_color);
    }

    &.destructive-action, &.text-button.destructive-action  {
      @include button(normal, $destructive_color, $selected_fg_color);
    }

    // Text buttons
    &.text-button:not(.suggested-action):not(.destructive-action):not(:disabled) {
      @extend %colored_hbuttons;
    }
  }

  // Linked image buttons (back and forward, plus and minus, etc)
  .linked button.image-button:not(:only-child),
  .linked.raised button:not(:only-child) {
    @extend %colored_hbuttons;
    @extend %linked;
    &, &:hover, &:not(:backdrop), &:not(:disabled) {
      &:not(:first-child) { border-left-color: $linked_border; }
      &:not(:last-child) { border-right-color: $linked_border; }
    }
  }

  // Stack buttons
  & > .stack-switcher.linked > button {
    @extend %colored_hbuttons;
    @extend %linked;
    &, &:hover, &:not(:backdrop), &:not(:disabled) {
      &:not(:first-child) { border-left-color: $linked_border; }
      &:not(:last-child) { border-right-color: $linked_border; }
    }
  }

  // hdy viewswitcher buttons (weather, system monitor, etc.)
  viewswitcher button.radio:checked {
    @include button(normal, $headerbar_color, $fg_color);
    &:backdrop {
      @if $variant == 'light' { @include button(backdrop, lighten($bg_color, 1.3%), $backdrop_fg_color); }
      @else { @include button(backdrop, darken($bg_color, 1.3%), $backdrop_fg_color); }
    }
    &:hover {
      @include button(hover, $headerbar_color, $fg_color);
      &:backdrop {
        @if $variant == 'light' { @include button(backdrop, darken($bg_color, 2.7%), $backdrop_fg_color); }
        @else { @include button(backdrop, lighten($bg_color, 2.7%), $backdrop_fg_color); }
      }
    }
  }

  // Entries
  entry {
    margin: 6px 0;
    @include button(normal, $headerbar_color, $text_color);
    &:backdrop { @include button(backdrop, $headerbar_color, $backdrop_text_color); }
    &:disabled { @include button(insensitive, $headerbar_color, $insensitive_fg_color); }
    &:backdrop:disabled { @include button(backdrop-insensitive, $headerbar_color, $backdrop_insensitive_color); }
  }

  // We want to match libadwaita's thinner buttons...
  button:not(.titlebutton) { margin: 6px 0; }
  // ...but not on hdy viewswitcher buttons
  viewswitcher button.radio { margin: 0; }

  // disabled switches
  switch:disabled {
    background-color: darken($backdrop_dark_fill, 4%);
    &:backdrop { background-color: $backdrop_dark_fill; }
  }

  // better animation when switching from backdrop
  &:not(:backdrop) { transition: 200ms ease-in; }
}

// Even out toggle button padding to make them more square
button.toggle:not(.image-button) {
  padding-left: 8px;
  padding-right: 8px;
}

// Font fixes when button text is bold
.flat.popup:not(.title) {
  font-weight: normal;
}

// Smaller text in statusbars
statusbar {
  font-size: small;
}

// scrolled window list rows
scrolledwindow list {
  &:not(.content) {
    padding: 6px 0;
  }
  row {
    margin: 0 6px;
    border-radius: $button_radius;
  }
  separator.horizontal {
    margin: 6px;
  }
}

// libadwaita switches don't have a backdrop effect on .content lists
list.content, list.view.frame {
  > row:backdrop {
    switch:not(:disabled) { background-color: $trough_color; }
    switch:not(:disabled):checked { background-color: $checkradio_bg_color; }
  }
}

// Non "content" lists
list.view.frame {
  border-radius: $card_radius;
  &:backdrop { background-color: $card_bg_color; }
  > row:not(:selected):hover button:not(:backdrop) {
    @include button(hover);
    transition: none;
  }
}

// Legacy application titlebuttons
.ssd .titlebar {
  border-width: 0;
  padding: 0px 4px;
  min-height: 36px;
  border-bottom: 1px solid $borders_color;
  &:backdrop { border-color: $backdrop_borders_color; }

  // Just to be safe, but it still doesn't fix the inkscape icon
  -gtk-icon-shadow: none;
  text-shadow: none;
  color: $fg_color;

  &.default-decoration button.titlebutton {
    background-color: $titlebutton_normal;
    min-height: 24px;
    min-width: 24px;
    margin: 0 4px 0 4px;
    padding: 0;
    &:hover { background-color: $titlebutton_normal_hover; }
    &:hover:active, &:active { background-color: $titlebutton_normal_active; }
    &:backdrop { background: $titlebutton_backdrop; }
    &:backdrop:hover { background: $titlebutton_backdrop_hover; }
  }
}

// Tree views
treeview.view:not(:backdrop):not(:selected):hover {
  background-color: $view_hover_color;
}

// Preferences window
// In nautilus preferences there is no padding below the last list
.preferences scrolledwindow > .frame > clamp {
  &.large, &.medium, &.small { padding-bottom: 30px; }
}

// Linked osd buttons, like in totem
.osd .linked > button { border-color: transparent; }
